!function(){THREE.LWOLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.LWOLoader.prototype={constructor:THREE.LWO2Loader,load:function(e,n,r,t){var o=this,a=new THREE.FileLoader(o.manager);a.setResponseType("arraybuffer"),a.load(e,function(e){n(o.parse(e))},r,t)},parse:function(e){function n(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function r(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}var t=new DataView(e);const o=1179603533,a=0,d=4,c=1280790322,i=1280790338,s=8;if(t.getInt32(a)!==o)return void console.error("THREE.LWO2Loader.parse: Cannot find header.");var u=t.getInt32(d);if(u+8!==t.byteLength&&console.warn("THREE.LWO2Loader.parse: Discrepency between size in header ("+u+" bytes) and actual size ("+t.byteLength+" bytes)."),t.getInt32(s)!==i&&t.getInt32(s)!==c){var g=(new TextDecoder).decode(new Uint8Array(e,s,4));return void console.error("THREE.LWO2Loader.parse: Invalid magic ID ("+g+") in LWO header.")}const L=1279351122,f=1347310675,h=1447903568,E=1347374163,l=1413564243,T=1347699015,y=1447903556,p=1447907393,v=1162761804,w=1129072976,R=1398100550,b=1111641944,H=1145393987,I=1413830740,C=1229147982;for(var O=12;O<t.byteLength;)if(0===t.getUint8(O))O++;else{var W=t.getInt32(O),u=t.getInt32(O+4)+8;switch(W){case f:console.log("Found PNTS chunk at "+O);break;default:console.log("Found "+(new TextDecoder).decode(new Uint8Array(e,O,4))+" chunk at "+O)}O+=u}}}}();