!function(){THREE.LWOLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.LWOLoader.prototype={constructor:THREE.LWO2Loader,load:function(e,r,a,n){var o=this,t=new THREE.FileLoader(o.manager);t.setResponseType("arraybuffer"),t.load(e,function(e){r(o.parse(e))},a,n)},parse:function(e){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function a(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}var n=new DataView(e);const o=1179603533,t=0,c=4,s=1280790322,i=1280790338,d=8;if(n.getInt32(t)!==o)return void console.error("THREE.LWO2Loader.parse: Cannot find header.");var l=n.getInt32(c);if(l+8!==n.byteLength&&console.warn("THREE.LWO2Loader.parse: Discrepency between size in header ("+l+" bytes) and actual size ("+n.byteLength+" bytes)."),n.getInt32(d)!==i&&n.getInt32(d)!==s){var u=(new TextDecoder).decode(new Uint8Array(e,d,4));return void console.error("THREE.LWO2Loader.parse: Invalid magic ID ("+u+") in LWO header.")}const f=1347310675,b=1397900883,g=1347374163,E=1129469523,k=1346586707,w=1398100550,v=8;for(var h=new THREE.BufferGeometry,y=null,L=12;L<n.byteLength;)if(0===n.getUint8(L))L++;else{var p=n.getInt32(L),l=n.getInt32(L+4);switch(L+=v,p){case f:if(l%12!==0)return void console.error("THREE.LWO2Loader.parse: F12 does not evenly divide into chunk size ("+l+"). Possible corruption.");for(var T=l/4,R=new Float32Array(T),H=0;H<T;H++)R[H]=n.getFloat32(L+4*H);var h=new THREE.BufferGeometry;h.addAttribute("position",new THREE.BufferAttribute(R,3)),console.dir(h),console.dir(R);break;case b:var I=(new TextDecoder).decode(new Uint8Array(e,L,l)),A=I.split("\0").filter(function(e){return""!=e});console.log(A);break;case g:for(var D=0;D<l;){for(var O=n.getInt16(L+D),m=new Int16Array(O),H=0;H<=O;H++)m[H]=n.getInt16(L+D+2*H);for(var C=[],H=0;H<O-2;H++)C.push(m[0]),C.push(m[H+1]),C.push(m[H+2]);console.log(C),console.log(m),D+=4+2*O}break;case w:const W=1129270354,U=1179402567,F=1280658761,x=1145652806,z=1397769539,B=1380271692,G=1414676814,M=1447843149,S=1447315782,P=1448300611,V=1447449164,j=1448366670,q=1196183379,J=1380338772,K=1380535623,N=1380535876,Q=1162102597,X=1397571918;for(var D=0;0!==n.getInt16(L+D);)D++;for(var Y=(new TextDecoder).decode(new Uint8Array(e,L,D)),Z=new THREE.Material({name:Y});D<l;)if(0===n.getUint8(L+D))D++;else{var _=n.getInt32(L+D),ee=n.getInt32(L+D+4);switch(D+=v,_){case W:console.log("Hello COLR!");break;case U:break;case F:break;case x:break;case z:break;case B:break;case G:break;case M:break;case S:break;case P:break;case V:break;case j:break;case q:break;case J:break;case K:break;case N:break;case Q:break;case X:break;default:console.warn("Found unrecognised subchunk type "+(new TextDecoder).decode(new Uint8Array(e,L+D-v,4))+" at "+L+D)}D+=ee}console.log("Surface name: "+Y);break;default:console.warn("Found unrecognised chunk type "+(new TextDecoder).decode(new Uint8Array(e,L-8,4))+" at "+L)}L+=l}}}}();